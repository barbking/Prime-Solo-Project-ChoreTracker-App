myApp.controller("AdminController",["$http","$location","$filter","tasksService",function($http,$location,$filter,tasksService){console.log("in AdminController");var vm=this;vm.tasks=[],console.log("tasks:",vm.tasks),vm.frequencies=[{value:1,text:"1"},{value:2,text:"2"},{value:3,text:"3"},{value:4,text:"4"},{value:5,text:"5"},{value:6,text:"6"},{value:7,text:"7"}],vm.usernames=[],$http.get("/admin").then(function(response){response.data.username?(vm.firstname=response.data.firstname,vm.userName=response.data.username,console.log("vm.userName: ",vm.userName),vm.loadTasks()):$location.path("/home")}),vm.logout=function(){$http.get("/user/logout").then(function(response){console.log("logged out"),$location.path("/home")})},vm.addUser=function(){""===vm.user.username||""===vm.user.firsname||""===vm.user.lastname||""===vm.user.password||""===vm.user.admin?swal({title:"Empty Fields!",text:"All fields except calendar are required!",type:"error",timer:3500,confirmButtonText:"Ok"}):(console.log("sending to server...",vm.user),$http.post("/register",vm.user).then(function(response){console.log("success",vm.user),vm.user={},vm.loadUsernames(),console.log("adduser",vm.usernames),swal({title:"User Added!",type:"success",timer:3500,confirmButtonText:"Ok"})},function(response){console.log("error"),vm.message="Please try again."}))},vm.removeUser=function(id){swal({title:"Are you sure?",type:"warning",showCancelButton:!0,confirmButtonColor:"#DD6B55",confirmButtonText:"Yes, delete it!",closeOnConfirm:!1},function(){swal("Deleted!","success"),$http({method:"DELETE",url:"/user/"+id}).then(function(response){console.log(response),vm.loadUsernames(),console.log("removeUser",vm.usernames)})})},vm.resetCheckBoxes=function(username){swal({title:"Are you sure you want to reset the users checkboxes?",type:"warning",showCancelButton:!0,confirmButtonColor:"#DD6B55",confirmButtonText:"Yes, reset!",closeOnConfirm:!1},function(){swal("Checkboxes reset!","success"),tasksService.resetTasks(username)})},vm.loadUsernames=function(){$http.get("/usernames").then(function(response){vm.usernames=response.data,console.log("in loadUsernames()",vm.usernames)})},vm.isVisible=!1,vm.showHide=function(){vm.loadUsernames(),vm.isVisible=!vm.isVisible},vm.showUsername=function(task){if(task.username&&vm.usernames.length){var selected=$filter("filter")(vm.usernames,{username:task.username});return selected.length?selected[0].username:"Not set"}return task.username||"Not set"},vm.showFrequency=function(task){var selected=[];return task.frequency&&(selected=$filter("filter")(vm.frequencies,{value:task.frequency})),selected.length?selected[0].text:"Not set"},vm.checkName=function(data,task_id){if("empty"===data)return"Enter a task name"},vm.loadTasks=function(){$http.get("/tasks").then(function(response){return console.log("in loadTasks, task[]:",response.data),vm.tasks=response.data,vm.tasks})},vm.hideTasks=function(){return vm.tasks=[],vm.tasks},vm.saveTask=function(data,id){return void 0===id?(console.log("in save task - no id"),angular.extend(data,{id:id}),$http.post("/tasks",data)):(angular.extend(data,{_id:id}),console.log("saveTask update data:",data),$http.post("/tasks/update",data))},vm.removeTask=function(index,id){swal({title:"Are you sure?",type:"warning",showCancelButton:!0,confirmButtonColor:"#DD6B55",confirmButtonText:"Yes, delete it!",closeOnConfirm:!1},function(){return swal("Deleted!","success"),vm.tasks.splice(index,1),console.log("removeTask id:",id),$http.delete("/tasks/"+id)})},vm.addTask=function(){console.log("addTask",vm.inserted),vm.inserted={id:vm.tasks.length+1,description:"",frequency:null,username:null},vm.tasks.push(vm.inserted),console.log("addTask tasks[]:",vm.tasks)},vm.logout=function(){$http.get("/user/logout").then(function(response){console.log("logged out"),$location.path("/home")})},vm.mySortFunction=function(task){return isNaN(task[vm.sortExpression])?task[vm.sortExpression]:parseInt(task[vm.sortExpression])}}]);